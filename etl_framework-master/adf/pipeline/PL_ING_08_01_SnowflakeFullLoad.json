{
	"name": "PL_ING_08_01_SnowflakeFullLoad",
	"properties": {
		"activities": [
			{
				"name": "FullLoad Copy into Landing",
				"description": "Copy a table from a database to the configurated Sink dynamically taking by input FwkItem, SrcPath.",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "spi_IngtLogInsert",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "OdbcSource",
						"query": {
							"value": "@if(\r\n    empty(string(pipeline().parameters.FwkItem['Query'])),\r\n    concat(\r\n        'SELECT ', \r\n        pipeline().parameters.FwkItem['TableHint'], ' ', \r\n        coalesce(pipeline().parameters.FwkItem['SelectedColumnNames'], '*'), \r\n        ' FROM ',\r\n        pipeline().parameters.FwkItem['Schemaname'], \r\n        '.',\r\n        pipeline().parameters.FwkItem['EntityName']\r\n    ), \r\n    pipeline().parameters.FwkItem['Query']\r\n)",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"validateDataConsistency": true,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_Snowflake_Source",
						"type": "DatasetReference",
						"parameters": {
							"FwkItem": {
								"value": "@pipeline().parameters.FwkItem",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DS_ADLS_PRQ_Sink",
						"type": "DatasetReference",
						"parameters": {
							"InstanceURL": {
								"value": "@pipeline().parameters.FwkItem['SinkInstanceURL']",
								"type": "Expression"
							},
							"FullPath": {
								"value": "@concat(pipeline().parameters.FwkItem['SinkPath'], \n\t'/',\n\tformatDateTime(pipeline().parameters.PL_01TriggerTime,'yyyy'),\n\tformatDateTime(pipeline().parameters.PL_01TriggerTime,'MM'),\n\tformatDateTime(pipeline().parameters.PL_01TriggerTime,'dd'),\n\tformatDateTime(pipeline().parameters.PL_01TriggerTime,'HH'),\n\tformatDateTime(pipeline().parameters.PL_01TriggerTime,'mm'),\n\t'_',\n\tpipeline().parameters.FwkItem['EntityName'],\n\t'.snappy.parquet'\n)",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "spi_IngtLogInsert",
				"description": "Executes the SP spi_IngtLogInsert to insert record into IngtLog table with the execution module information.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spi_IngtLogInsert]",
					"storedProcedureParameters": {
						"IngtOutputId": {
							"value": {
								"value": "@pipeline().parameters.FwkItem['IngtOutputId']",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"EntRunId": {
							"value": {
								"value": "@pipeline().parameters.EntRunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"ModuleRunId": {
							"value": {
								"value": "@pipeline().parameters.ModuleRunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"PipelineStatus": {
							"value": {
								"value": "InProgress",
								"type": "Expression"
							},
							"type": "String"
						},
						"StartDate": {
							"value": {
								"value": "@formatdatetime(pipeline().TriggerTime)",
								"type": "Expression"
							},
							"type": "Datetime"
						},
						"RowsRead": {
							"value": null,
							"type": "Int64"
						},
						"RowsCopied": {
							"value": null,
							"type": "Int64"
						},
						"CopyDuration": {
							"value": null,
							"type": "Double"
						},
						"Throughput": {
							"value": null,
							"type": "Double"
						},
						"ErrorMessage": {
							"value": null,
							"type": "String"
						},
						"FileName": {
							"value": null,
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_configurationDB",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "spu_IngtLogUpdate_succeeded",
				"description": "Executes the SP spu_IngtLogUpdate to update record into IngtLog table with the execution module information.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "FullLoad Copy into Landing",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spu_IngtLogUpdate]",
					"storedProcedureParameters": {
						"IngtOutputId": {
							"value": {
								"value": "@pipeline().parameters.FwkItem['IngtOutputId']",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"EntRunId": {
							"value": {
								"value": "@pipeline().parameters.EntRunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"ModuleRunId": {
							"value": {
								"value": "@pipeline().parameters.ModuleRunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"PipelineStatus": {
							"value": {
								"value": "Succeeded",
								"type": "Expression"
							},
							"type": "String"
						},
						"RowsRead": {
							"value": {
								"value": "@if(\n    contains(activity('FullLoad Copy into Landing').output, 'rowsRead'),\n    activity('FullLoad Copy into Landing').output.rowsRead,\n    null\n)",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"RowsCopied": {
							"value": {
								"value": "@if(\n    contains(activity('FullLoad Copy into Landing').output, 'rowsCopied'),\n    activity('FullLoad Copy into Landing').output.rowsCopied,\n    null\n)",
								"type": "Expression"
							},
							"type": "Int64"
						},
						"CopyDuration": {
							"value": {
								"value": "@if(\n    contains(activity('FullLoad Copy into Landing').output, 'copyDuration'),\n    activity('FullLoad Copy into Landing').output.copyDuration,\n    null\n)",
								"type": "Expression"
							},
							"type": "Double"
						},
						"Throughput": {
							"value": {
								"value": "@if(\n    contains(activity('FullLoad Copy into Landing').output, 'throughput'),\n    activity('FullLoad Copy into Landing').output.throughput,\n    null\n)",
								"type": "Expression"
							},
							"type": "Double"
						},
						"ErrorMessage": {
							"value": null,
							"type": "String"
						},
						"RowsSkipped": {
							"value": null,
							"type": "Int64"
						},
						"LogFilePath": {
							"value": null,
							"type": "String"
						},
						"FileName": {
							"value": null,
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_configurationDB",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "spu_IngtLogUpdate_failed",
				"description": "Executes the SP spu_IngtLogUpdate to update record into IngtLog table with the execution module information.",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "FullLoad Copy into Landing",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spu_IngtLogUpdate]",
					"storedProcedureParameters": {
						"IngtOutputId": {
							"value": {
								"value": "@pipeline().parameters.FwkItem['IngtOutputId']",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"EntRunId": {
							"value": {
								"value": "@pipeline().parameters.EntRunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"ModuleRunId": {
							"value": {
								"value": "@pipeline().parameters.ModuleRunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"PipelineStatus": {
							"value": {
								"value": "Failed",
								"type": "Expression"
							},
							"type": "String"
						},
						"RowsRead": {
							"value": null,
							"type": "Int64"
						},
						"RowsCopied": {
							"value": null,
							"type": "Int64"
						},
						"CopyDuration": {
							"value": null,
							"type": "Double"
						},
						"Throughput": {
							"value": null,
							"type": "Double"
						},
						"ErrorMessage": {
							"value": {
								"value": "@if(\n    and(\n        contains(activity('FullLoad Copy into Landing').output, 'errors'),\n        greater(length(activity('FullLoad Copy into Landing').output.errors), 0)\n    ),\n    activity('FullLoad Copy into Landing').output.errors[0].Message,\n    null\n)",
								"type": "Expression"
							},
							"type": "String"
						},
						"RowsSkipped": {
							"value": null,
							"type": "Int64"
						},
						"LogFilePath": {
							"value": null,
							"type": "String"
						},
						"FileName": {
							"value": null,
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_configurationDB",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"FwkItem": {
				"type": "array"
			},
			"PL_01TriggerTime": {
				"type": "string"
			},
			"EntRunId": {
				"type": "string"
			},
			"ModuleRunId": {
				"type": "string"
			}
		},
		"folder": {
			"name": "01 Ingestion Module/08 Snowflake"
		},
		"annotations": [],
		"lastPublishTime": "2023-07-06T08:29:13Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}